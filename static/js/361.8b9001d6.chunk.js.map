{"version":3,"file":"static/js/361.8b9001d6.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Review/Review.jsx","hooks/useHttp.js","services/movies.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/movies';\nimport placeholderImage from './default-photo.png';\nimport styled from 'styled-components';\nimport { useHttp } from 'hooks/useHttp';\nimport Loader from 'components/Loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { data: cast, error } = useHttp(getMovieCredits, movieId);\n\n  if (error) {\n    toast.error(`Sorry, problem connection to server! ${error}`);\n    return <ToastContainer />;\n  }\n\n  if (!cast) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      {cast?.length !== 0 && (\n        <CastList>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                    : placeholderImage\n                }\n                alt={actor.name}\n                width={120}\n              />\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </CastList>\n      )}\n      {cast?.length === 0 && (\n        <NoInfo>We don't have any information about cast</NoInfo>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n\nconst CastList = styled.ul`\n  color: white;\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n\n  li {\n    text-align: center;\n  }\n  img {\n    /* width: 120px; */\n    border-radius: 10px;\n  }\n  p {\n    margin-top: 0.5rem;\n  }\n`;\n\nexport const NoInfo = styled.p`\n  color: white;\n  padding-left: 1rem;\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movies';\nimport styled from 'styled-components';\nimport { NoInfo } from 'components/Cast/Cast';\nimport { useHttp } from 'hooks/useHttp';\nimport Loader from 'components/Loader/Loader';\nimport { toast, ToastContainer } from 'react-toastify';\n\nconst Review = () => {\n  const { movieId } = useParams();\n  const { data: reviews, error } = useHttp(getMovieReviews, movieId);\n\n  if (error) {\n    toast.error(`Sorry, problem connection to server! ${error}`);\n    return <ToastContainer />;\n  }\n\n  if (!reviews) {\n    return <Loader />;\n  }\n  return (\n    <>\n      {reviews?.length !== 0 && (\n        <ReviewsList>\n          {reviews?.map(item => (\n            <li key={item.id}>\n              <ReviewAuthor>\n                Author: {item.author_details.username}\n              </ReviewAuthor>\n              <p>{item.content}</p>\n            </li>\n          ))}\n        </ReviewsList>\n      )}\n      {reviews?.length === 0 && (\n        <NoInfo>We don't have any reviews for this movie.</NoInfo>\n      )}\n    </>\n  );\n};\n\nexport default Review;\n\nconst ReviewsList = styled.ul`\n  color: white;\n  list-style-type: none;\n  padding: 0 1rem;\n  li {\n    margin-bottom: 1rem;\n    border-bottom: 1px solid #444;\n    padding-bottom: 1rem;\n  }\n  p {\n    margin: 0.5rem 0;\n  }\n`;\n\nconst ReviewAuthor = styled.p`\n  font-weight: bold;\n`;\n","import { useEffect, useState } from 'react';\n\nexport const useHttp = (fn, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fn(param)\n      .then(res => setData(res))\n      .catch(error => setError(error.message))\n      .finally(setLoading(false));\n  }, [fn, param]);\n  return { data, setData, error, loading };\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'ab3e5468cf143132c670ce55117e8d32',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMoviesList = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const getMoviesByName = async movie => {\n  const { data } = await instance.get(`/search/movie?query=${movie}`);\n  return data.results;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  //   console.log(data);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  //   console.log(data.cast);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  //   console.log(data);\n  return data.results;\n};\n"],"names":["movieId","useParams","_useHttp","useHttp","getMovieCredits","cast","data","error","toast","concat","_jsx","ToastContainer","_jsxs","_Fragment","children","length","CastList","map","actor","src","profile_path","placeholderImage","alt","name","width","character","id","NoInfo","Loader","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","getMovieReviews","reviews","ReviewsList","item","ReviewAuthor","author_details","username","content","fn","param","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setError","_useState5","_useState6","loading","setLoading","useEffect","then","res","catch","message","finally","instance","axios","baseURL","params","api_key","language","getTrendingMoviesList","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","_context","prev","next","get","sent","abrupt","results","stop","apply","arguments","getMoviesByName","_ref2","_callee2","movie","_yield$instance$get2","_context2","_x","getMoviesById","_ref3","_callee3","_yield$instance$get3","_context3","_x2","_ref4","_callee4","_yield$instance$get4","_context4","_x3","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}
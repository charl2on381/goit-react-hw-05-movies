{"version":3,"file":"static/js/149.c82686f9.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","hooks/useHttp.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/movies.js"],"sourcesContent":["import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesUl>\n      {movies.map(movie => (\n        <MoviesLi key={movie.id}>\n          <MovieLink state={{ from: location }} to={`/movies/${movie.id}`}>\n            {movie.title}\n          </MovieLink>\n        </MoviesLi>\n      ))}\n    </MoviesUl>\n  );\n};\n\nexport default MoviesList;\n\nconst MoviesUl = styled.ul`\n  background-color: #2c2c2c;\n  padding: 0;\n  list-style-type: none;\n`;\n\nconst MoviesLi = styled.li`\n  padding: 0.5rem 0;\n  padding-left: 1rem;\n  border-bottom: 1px solid #444;\n  color: white;\n`;\n\nconst MovieLink = styled(NavLink)`\n  color: white; /* White text color for movie titles */\n  text-decoration: none;\n  display: block;\n  /* padding: 0.5rem; */\n  transition: background-color 0.3s;\n  &:hover {\n    background-color: #3d3d3d; /* Slightly lighter for hover/focus */\n    color: #06bcee;\n  }\n`;\n","import { useEffect, useState } from 'react';\n\nexport const useHttp = (fn, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fn(param)\n      .then(res => setData(res))\n      .catch(error => setError(error.message))\n      .finally(setLoading(false));\n  }, [fn, param]);\n  return { data, setData, error, loading };\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const SearchForm = ({ handleSetQuery }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleSetQuery(query);\n\n    setQuery('');\n  };\n  const handleChange = e => {\n    const { value } = e.target;\n    setQuery(value);\n  };\n  return (\n    <MoviesForm onSubmit={handleSubmit}>\n      <label>\n        <MoviesInput\n          type=\"text\"\n          value={query}\n          name=\"query\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <SearchButton>Search</SearchButton>\n    </MoviesForm>\n  );\n};\n\nconst MoviesForm = styled.form`\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  padding-left: 1rem;\n`;\n\nconst MoviesInput = styled.input`\n  padding: 0.5rem;\n  margin-right: 0.5rem;\n  border: none;\n  border-radius: 4px;\n`;\n\nconst SearchButton = styled.button`\n  padding: 0.5rem 1rem;\n  background-color: #06bcee; /* Highlight color for the button */\n  border: none;\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n  &:hover {\n    background-color: #05a0cc;\n  }\n`;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByName } from 'services/movies';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useHttp } from 'hooks/useHttp';\nimport Loader from 'components/Loader/Loader';\nimport { toast, ToastContainer } from 'react-toastify';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const { data: movies, error, loading } = useHttp(getMoviesByName, query);\n\n  const handleSetQuery = query => {\n    setSearchParams(query ? { query } : {});\n  };\n\n  if (error) {\n    toast.error(`Sorry, problem connection to server! ${error}`);\n    return <ToastContainer />;\n  }\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <SearchForm handleSetQuery={handleSetQuery} />\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'ab3e5468cf143132c670ce55117e8d32',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMoviesList = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const getMoviesByName = async movie => {\n  const { data } = await instance.get(`/search/movie?query=${movie}`);\n  return data.results;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  //   console.log(data);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  //   console.log(data.cast);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  //   console.log(data);\n  return data.results;\n};\n"],"names":["_ref","movies","location","useLocation","_jsx","MoviesUl","children","map","movie","MoviesLi","MovieLink","state","from","to","concat","id","title","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","NavLink","_templateObject3","useHttp","fn","param","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","then","res","catch","message","finally","SearchForm","handleSetQuery","query","setQuery","_jsxs","MoviesForm","onSubmit","e","preventDefault","MoviesInput","type","value","name","onChange","target","required","SearchButton","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","_useHttp","getMoviesByName","toast","ToastContainer","Loader","_Fragment","MoviesList","instance","axios","baseURL","params","api_key","language","getTrendingMoviesList","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","_context","prev","next","sent","abrupt","results","stop","apply","arguments","_ref2","_callee2","_yield$instance$get2","_context2","_x","getMoviesById","_ref3","_callee3","_yield$instance$get3","_context3","_x2","getMovieCredits","_ref4","_callee4","_yield$instance$get4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}